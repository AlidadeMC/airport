#!/usr/bin/env ruby

# frozen_string_literal: true

# Airport
# (C) Marquis Kurt 2025.
# A basic PaperMC plugin updater.
#
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

require 'optparse'
require 'airport'
require 'airport/terminal'
require 'airport/onboarding'

HELP_TEXT = 'Usage: airport <init|install|refresh|update|version|help> [options]'

options = {}
OptionParser.new do |opts|
  opts.banner = HELP_TEXT
  opts.on('-f=FILE', '--file=FILE', 'Specify a termspec to use') do |v|
    options[:file] = v
  end
end.parse!

command, = ARGV

if command.nil? || command == ''
  puts 'Err: Specify a command.'
  puts HELP_TEXT
  exit 1
end

filepath = '.termspec'
filepath = options[:file] unless options[:file].nil?

# Pass one: Check for any commands that don't require a file to be
# immediately loaded.

case command
when 'init'
  write_template(filepath)
  puts 'Termspec created at .termspec.'
  return
when 'version'
  puts Airport::VERSION
  return
when 'help'
  puts HELP_TEXT
  return
end

terminal_gate = nil
File.open(filepath, 'r') do |file|
  terminal_gate = instance_eval(file.read)
end

if terminal_gate.nil?
  puts "Err: Airport couldn't load the configuration. Abort."
  exit 2
end

terminal = Airport::Terminal.new(terminal_gate)

# Pass two: Handle the remaining commands.

case command
when 'install'
  puts 'Installing all plugins...'
  terminal.install_plugins
when 'refresh'
  puts 'Refreshing current plugins...'
  terminal.refresh_plugins
when 'update'
  puts 'Updating current plugins...'
  terminal.update_plugins
  puts 'Plugin updates are ready for installation. Restart your Paper server to apply changes.'
else
  puts "Err: Invalid command #{command}."
  puts HELP_TEXT
  exit 1
end
